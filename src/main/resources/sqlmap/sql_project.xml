<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kantar.mapper.ProjectMapper">
    <select id="getProjectInfo" resultType="com.kantar.vo.ProjectVO">
        SELECT * FROM KT_PROJECT
    </select>

    <resultMap id="getProjectListMap" type="com.kantar.vo.ProjectListVO">
        <id property="idx_project" column="idx_project" />
        <result property="idx_project_job_projectid" column="idx_project_job_projectid" />
        <result property="idx_report" column="idx_report" />
        <result property="job_no" column="job_no" />
        <result property="project_id" column="project_id" />
        <result property="project_name" column="project_name" />
        <result property="project_type_str" column="project_type_str" />
        <result property="filename" column="filename" />
        <result property="user_name" column="user_name" />
        <result property="create_dt" column="create_dt" />
        <collection property="reportList" resultMap="reportList"/>
    </resultMap>

    <resultMap id="reportList" type="com.kantar.vo.ReportListVO">
        <result property="idx_report" column="idx_report"/>
        <result property="title" column="title"/>
    </resultMap>

    <select id="getProjectList" resultType="com.kantar.vo.ProjectListVO">
        SELECT A.idx_project_job_projectid, B.job_no, A.project_id, C.user_name, E.project_name, IF(E.project_type=1, 'RAW DATA', '병합') AS project_type_str, E.idx_project, LEFT(REPLACE(E.create_dt,'-','.'),16) AS create_dt
        , (SELECT filename FROM KT_REPORT WHERE idx_project_job_projectid=A.idx_project_job_projectid ORDER BY idx_report LIMIT 1) AS filename
        FROM KT_PROJECT_JOB_PROJECTID A
        JOIN KT_PROJECT_JOB B ON B.idx_project_job=A.idx_project_job
        JOIN KT_PROJECT E ON E.idx_project_job_projectid=A.idx_project_job_projectid
        JOIN KT_USER C ON C.idx_user=A.idx_user
        WHERE (A.idx_user=#{idx_user} OR (SELECT COUNT(1) FROM KT_USER WHERE idx_user=A.idx_user AND user_type IN (11,99))>0)
        ORDER BY A.project_id DESC
        <if test="currentPage != null">
        LIMIT #{recordCountPerPage} OFFSET #{firstIndex}
        </if>
    </select>

    <select id="getProjectInfoByIdx" resultType="com.kantar.vo.ProjectVO">
        SELECT idx_project, idx_project_job_projectid, project_name FROM KT_PROJECT WHERE idx_project=#{idx_project}
    </select>

    <select id="getProjectListCount" resultType="Integer">
        SELECT COUNT(1)
        FROM KT_PROJECT_JOB_PROJECTID A
        JOIN KT_PROJECT_JOB B ON B.idx_project_job=A.idx_project_job
        JOIN KT_PROJECT E ON E.idx_project_job_projectid=A.idx_project_job_projectid
        WHERE (A.idx_user=#{idx_user} OR (SELECT COUNT(1) FROM KT_USER WHERE idx_user=A.idx_user AND user_type IN (11,99))>0)
    </select>

    <select id="getProjectJobNo" resultType="com.kantar.vo.ProjectVO">
        SELECT idx_project_job FROM KT_PROJECT_JOB WHERE job_no=#{job_no}
    </select>

    <insert id="savProjectJobNo" useGeneratedKeys="true" keyColumn="idx_project_job" keyProperty="idx_project_job">
        INSERT INTO KT_PROJECT_JOB (job_no) VALUES (#{job_no})
    </insert>

    <select id="getProjectSeq" resultType="int">
        SELECT IFNULL(MAX(project_seq),0) FROM KT_PROJECT_JOB_PROJECTID
    </select>

    <insert id="savProjectJobProjectid" useGeneratedKeys="true" keyColumn="idx_project_job_projectid" keyProperty="idx_project_job_projectid">
        INSERT INTO KT_PROJECT_JOB_PROJECTID (idx_project_job, project_id, project_seq, idx_user) VALUES (#{idx_project_job}, #{project_id}, #{project_seq}, #{idx_user});
    </insert>

    <insert id="savProjectInfo" useGeneratedKeys="true" keyColumn="idx_project" keyProperty="idx_project">
        INSERT INTO KT_PROJECT (idx_project_job_projectid, project_name, project_type, project_status, summary0, idx_user) VALUES (#{idx_project_job_projectid}, #{project_name}, 1, 1, #{summary0}, #{idx_user});
    </insert>

    <insert id="savMergeProject" useGeneratedKeys="true" keyColumn="idx_project" keyProperty="idx_project">
        INSERT INTO KT_PROJECT (idx_project_job_projectid, project_name, project_type, project_status, summary0, idx_user) VALUES (#{idx_project_job_projectid}, #{project_name}, 2, 1, #{summary0}, #{idx_user});
    </insert>

    <update id="modiProjectInfo">
        UPDATE KT_PROJECT
            SET idx_user=#{idx_user}
            <if test="summary0 != null">
                , summary0=#{summary0}
            </if>
            WHERE idx_project=#{idx_project}
    </update>

    <select id="getProjectView" resultType="com.kantar.vo.ProjectVO">
        SELECT A.idx_project_job_projectid, B.project_name, B.project_type, B.project_status, C.project_id, A.create_dt, B.summary0, A.summary0 AS summary
        FROM KT_REPORT A
        JOIN KT_PROJECT B ON B.idx_project_job_projectid=A.idx_project_job_projectid
        JOIN KT_PROJECT_JOB_PROJECTID C ON C.idx_project_job_projectid=B.idx_project_job_projectid
        JOIN KT_PROJECT_JOB D ON D.idx_project_job=C.idx_project_job
        WHERE A.idx_report=#{idx}
    </select>

    <select id="getProjectDown" resultType="com.kantar.vo.ProjectVO">
        SELECT DISTINCT filepath, `filename` FROM KT_REPORT WHERE idx_project_job_projectid=#{idx_project_job_projectid} AND (idx_user=#{idx_user} OR (SELECT COUNT(1) FROM KT_USER WHERE idx_user=#{idx_user} AND user_type IN (11,99))>0)
    </select>
</mapper>